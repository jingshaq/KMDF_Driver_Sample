// Hid.c: HID-related routine

#include "Driver.h"
#include "Hid.tmh"


#define REPORT_BUFFER_SIZE   1024
#define DEVICE_VERSION 0x01

/////
const unsigned char TouchpadReportDescriptor2[] = {
	USAGE_PAGE, 0x0d, /* Usage Page: Digitizer */ \
	USAGE, 0x05, /* Usage: Touch Pad */ \
	BEGIN_COLLECTION, 0x01, /* Begin Collection: Application */ \
	REPORT_ID, REPORTID_TOUCHPAD,  /* Report ID: Multi-touch 需要测试一下amtptp驱动值REPORTID_MULTITOUCH*/
	USAGE, 0x22, /* Usage: Finger */ \
	BEGIN_COLLECTION, 0x02, /* Begin Collection: Logical */ \
	/* Begin a byte */ \
	LOGICAL_MINIMUM, 0x00, /* Logical Minimum: 0 */
	LOGICAL_MAXIMUM, 0x01, /* Logical Maximum: 1 */ \
	USAGE, 0x47, /* Usage: Confidence */ \
	USAGE, 0x42, /* Usage: Tip switch */ \
	REPORT_COUNT, 0x02, /* Report Count: 2 */ \
	REPORT_SIZE, 0x01, /* Report Size: 1 */ \
	INPUT, 0x02, /* Input: (Data, Var, Abs) */ \
	REPORT_COUNT, 0x01, /* Report Count: 1 */ \
	REPORT_SIZE, 0x02, /* Report Size: 2 */
	LOGICAL_MAXIMUM, 0x02, /* Logical Maximum: 2 */ \
	USAGE, 0x51, /* Usage: Contract Identifier */ \
	INPUT, 0x02, /* Input: (Data, Var, Abs) */ \
	REPORT_SIZE, 0x01, /* Report Size: 1 */ \
	REPORT_COUNT, 0x04, /* Report Count: 4 */
	INPUT, 0x03, /* Input: (Const, Var, Abs) */
	/* End of a byte */ \
	/* Begin of 4 bytes */ \
	/* Size is hard-coded at this moment */ \
	/* This hard-coded size is designed for MacBookPro 13 / 14 */ \
	USAGE_PAGE, 0x01, /* Usage Page: Generic Desktop */ \
	LOGICAL_MINIMUM, 0x00, /* Logical Minimum: 0 */
	LOGICAL_MAXIMUM_2, 0xff, 0x0f, /* LOGICAL_MAXIMUM (4095) */
	REPORT_SIZE, 0x10, /* Report Size: 0x10 (2 bytes) */ \
	UNIT_EXPONENT, 0x0e, /* Unit exponent: -2 */ \
	UNIT, 0x13, /* Unit(Inch, EngLinear) */
	USAGE, 0x30, /* Usage: X */ \
	PHYSICAL_MINIMUM, 0x00,    /* PHYSICAL_MINIMUM */
	PHYSICAL_MAXIMUM_2, 0x90, 0x01, /* PHYSICAL_MAXIMUM (400) */
	REPORT_COUNT, 0x01, /* Report count: 1 */ \
	INPUT, 0x02, /* Input: (Data, Var, Abs) */ \
	PHYSICAL_MAXIMUM_2, 0x13, 0x01, /* PHYSICAL_MAXIMUM (275)*/
	USAGE, 0x31, /* Usage: Y */ \
	INPUT, 0x02, /* Input: (Data, Var, Abs) */ \
	END_COLLECTION,  /* End Collection */
	UNIT_EXPONENT, 0x0c, /* Unit exponent: -4 */ \
	UNIT_2, 0x01, 0x10, /* Time: Second */ \
	PHYSICAL_MAXIMUM_3, 0xff, 0xff, 0x00, 0x00, /* PHYSICAL_MAXIMUM (65535) */ \
	LOGICAL_MAXIMUM_3, 0xff, 0xff, 0x00, 0x00, /* LOGICAL_MAXIMUM (65535) */ \
	REPORT_SIZE, 0x10, /* Report Size: 16 */ \
	REPORT_COUNT, 0x01, /* Report Count: 1 */ \
	USAGE_PAGE, 0x0d, /* Usage Page: Digitizer */ \
	USAGE, 0x56, /* Usage: Scan Time */ \
	INPUT, 0x02, /* Input: (Data, Var, Abs) */ \
	USAGE, 0x54, /* Usage: Contact Count */ \
	LOGICAL_MAXIMUM, 0x7f, /* LOGICAL_MAXIMUM(127) */ \
	REPORT_COUNT, 0x01, /* Report Count: 2 */ \
	REPORT_SIZE, 0x08, /* Report Size: 1 */ \
	INPUT, 0x02, /* Input: (Data, Var, Abs) */ \
	USAGE_PAGE, 0x09, /* Usage Page: Button */ \
	USAGE, 0x01, /* Button 1 */ \
	USAGE, 0x02, /* Button 2 */ \
	USAGE, 0x03, /* Button 3 */ \
	LOGICAL_MAXIMUM, 0x01, \
	REPORT_SIZE, 0x01, /* Report Size: 1 */ \
	REPORT_COUNT, 0x01, /* Report Count: 1 */ \
	INPUT, 0x02, /* Input: (Data, Var, Abs) */ \
	REPORT_COUNT, 0x07, \
	INPUT, 0x03, /* Input: (Const, Var, Abs) */ \
	USAGE_PAGE, 0x0d, /* Usage Page: Digitizer */ \
	REPORT_ID, REPORTID_MAX_COUNT, /* REPORT_ID(Feature)测试REPORTID_DEVICE_CAPS */
	USAGE, 0x55, /* Usage: Maximum Contacts */ \
	USAGE, 0x59, /* Usage: Touchpad Button Type*/
	REPORT_SIZE, 0x04, \
	REPORT_COUNT, 0x02, \
	LOGICAL_MAXIMUM, 0x0f, /* LOGICAL_MAXIMUM(15)*/ \
	FEATURE, 0x02, /* FEATURE(Data, Var, Abs)*/ \
	USAGE_PAGE_1, 0x00, 0xff,  /* USAGE_PAGE(Vendor Defined)*/ \
	REPORT_ID, REPORTID_PTPHQA, /* REPORT_ID(PTPHQA)*/ \
	USAGE, 0xc5, /* USAGE (Vendor Usage 0xC5) */ \
	LOGICAL_MINIMUM, 0x00, \
	LOGICAL_MAXIMUM_2, 0xff, 0x00, \
	REPORT_SIZE, 0x08, \
	REPORT_COUNT_2, 0x00, 0x01, /* REPORT_COUNT(0x100 (256))*/ \
	FEATURE, 0x02, /* FEATURE(Data, Var, Abs)*/ \
	END_COLLECTION /* End Collection */

};



const unsigned char DefaultTouchpadReportDescriptor[] = {
	//TOUCH PAD input TLC
	0x05, 0x0d,                         // USAGE_PAGE (Digitizers)          
	0x09, 0x05,                         // USAGE (Touch Pad)             
	0xa1, 0x01,                         // COLLECTION (Application)         
	0x85, REPORTID_MULTITOUCH,            //   REPORT_ID (Touch pad)      //REPORTID_MULTITOUCH       REPORTID_TOUCHPAD   
	0x09, 0x22,                         //   USAGE (Finger)                 
	0xa1, 0x02,                         //   COLLECTION (Logical)  
	0x15, 0x00,                         //       LOGICAL_MINIMUM (0)
	0x25, 0x01,                         //       LOGICAL_MAXIMUM (1)
	0x09, 0x47,                         //       USAGE (Confidence) 
	0x09, 0x42,                         //       USAGE (Tip switch)
	0x95, 0x02,                         //       REPORT_COUNT (2)
	0x75, 0x01,                         //       REPORT_SIZE (1)
	0x81, 0x02,                         //       INPUT (Data,Var,Abs)
	0x95, 0x01,                         //       REPORT_COUNT (1)
	0x75, 0x02,                         //       REPORT_SIZE (2)
	0x25, 0x02,                         //       LOGICAL_MAXIMUM (2)
	0x09, 0x51,                         //       USAGE (Contact Identifier)
	0x81, 0x02,                         //       INPUT (Data,Var,Abs)
	0x75, 0x01,                         //       REPORT_SIZE (1)
	0x95, 0x04,                         //       REPORT_COUNT (4)             
	0x81, 0x03,                         //       INPUT (Cnst,Var,Abs)
	0x05, 0x01,                         //       USAGE_PAGE (Generic Desk..
	0x15, 0x00,                         //       LOGICAL_MINIMUM (0)
	0x26, 0xff, 0x0f,                   //       LOGICAL_MAXIMUM (4095)         
	0x75, 0x10,                         //       REPORT_SIZE (16)             
	0x55, 0x0e,                         //       UNIT_EXPONENT (-2)           
	0x65, 0x13,                         //       UNIT(Inch,EngLinear)                  
	0x09, 0x30,                         //       USAGE (X)                    
	0x35, 0x00,                         //       PHYSICAL_MINIMUM (0)         
	0x46, 0x90, 0x01,                   //       PHYSICAL_MAXIMUM (400)
	0x95, 0x01,                         //       REPORT_COUNT (1)         
	0x81, 0x02,                         //       INPUT (Data,Var,Abs)         
	0x46, 0x13, 0x01,                   //       PHYSICAL_MAXIMUM (275)
	0x09, 0x31,                         //       USAGE (Y)                    
	0x81, 0x02,                         //       INPUT (Data,Var,Abs)    
	0xc0,                               //    END_COLLECTION
	0x55, 0x0C,                         //    UNIT_EXPONENT (-4)           
	0x66, 0x01, 0x10,                   //    UNIT (Seconds)        
	0x47, 0xff, 0xff, 0x00, 0x00,      //     PHYSICAL_MAXIMUM (65535)
	0x27, 0xff, 0xff, 0x00, 0x00,         //  LOGICAL_MAXIMUM (65535) 
	0x75, 0x10,                           //  REPORT_SIZE (16)             
	0x95, 0x01,                           //  REPORT_COUNT (1) 
	0x05, 0x0d,                         //    USAGE_PAGE (Digitizers)
	0x09, 0x56,                         //    USAGE (Scan Time)    
	0x81, 0x02,                           //  INPUT (Data,Var,Abs)         
	0x09, 0x54,                         //    USAGE (Contact count)
	0x25, 0x7f,                           //  LOGICAL_MAXIMUM (127) 
	0x95, 0x01,                         //    REPORT_COUNT (1)
	0x75, 0x08,                         //    REPORT_SIZE (8)    
	0x81, 0x02,                         //    INPUT (Data,Var,Abs)
	0x05, 0x09,                         //    USAGE_PAGE (Button)         
	0x09, 0x01,                         //    USAGE_(Button 1)     
	0x09, 0x02,                         //    USAGE_(Button 2)     
	0x09, 0x03,                         //    USAGE_(Button 3)     
	0x25, 0x01,                         //    LOGICAL_MAXIMUM (1)          
	0x75, 0x01,                         //    REPORT_SIZE (1)              
	0x95, 0x01,                         //    REPORT_COUNT (1)             
	0x81, 0x02,                         //    INPUT (Data,Var,Abs)
	0x95, 0x07,                          //   REPORT_COUNT (7)                 
	0x81, 0x03,                         //    INPUT (Cnst,Var,Abs)
	0x05, 0x0d,                         //    USAGE_PAGE (Digitizer)
	0x85, REPORTID_DEVICE_CAPS,            //   REPORT_ID (Feature)  /硬件支持点数    REPORTID_DEVICE_CAPS         
	0x09, 0x55,                         //    USAGE (Contact Count Maximum)
	0x09, 0x59,                         //    USAGE (Pad TYpe)
	0x75, 0x04,                         //    REPORT_SIZE (4) 
	0x95, 0x02,                         //    REPORT_COUNT (2)
	0x25, 0x0f,                         //    LOGICAL_MAXIMUM (15)
	0xb1, 0x02,                         //    FEATURE (Data,Var,Abs)
	0x06, 0x00, 0xff,                   //    USAGE_PAGE (Vendor Defined)
	0x85, REPORTID_PTPHQA,               //    REPORT_ID (PTPHQA)  
	0x09, 0xC5,                         //    USAGE (Vendor Usage 0xC5)    
	0x15, 0x00,                         //    LOGICAL_MINIMUM (0)          
	0x26, 0xff, 0x00,                   //    LOGICAL_MAXIMUM (0xff) 
	0x75, 0x08,                         //    REPORT_SIZE (8)             
	0x96, 0x00, 0x01,                   //    REPORT_COUNT (0x100 (256))             
	0xb1, 0x02,                         //    FEATURE (Data,Var,Abs)
	0xc0,                               // END_COLLECTION
	//CONFIG TLC
	0x05, 0x0d,                         //    USAGE_PAGE (Digitizer)
	0x09, 0x0E,                         //    USAGE (Configuration)
	0xa1, 0x01,                         //   COLLECTION (Application)
	0x85, REPORTID_REPORTMODE,             //   REPORT_ID (Feature)   REPORTID_FEATURE，REPORTID_REPORTMODE  REPORTID_UMAPP_CONF, /* Report ID: User-mode Application configuration */ \             
	0x09, 0x22,                         //   USAGE (Finger)              
	0xa1, 0x02,                         //   COLLECTION (logical)     
	0x09, 0x52,                         //    USAGE (Input Mode)         
	0x15, 0x00,                         //    LOGICAL_MINIMUM (0)      
	0x25, 0x0a,                         //    LOGICAL_MAXIMUM (10)
	0x75, 0x10,                         //    REPORT_SIZE (8)         测试REPORT_SIZE (16)  
	0x95, 0x01,                         //    REPORT_COUNT (1)         
	0xb1, 0x02,                         //    FEATURE (Data,Var,Abs    
	0xc0,                               //   END_COLLECTION
	0x09, 0x22,                         //   USAGE (Finger)              
	0xa1, 0x00,                         //   COLLECTION (physical)     
	0x85, REPORTID_FUNCTION_SWITCH,     //     REPORT_ID (Feature)              
	0x09, 0x57,                         //     USAGE(Surface switch)
	0x09, 0x58,                         //     USAGE(Button switch)
	0x75, 0x01,                         //     REPORT_SIZE (1)
	0x95, 0x02,                         //     REPORT_COUNT (2)
	0x25, 0x01,                         //     LOGICAL_MAXIMUM (1)
	0xb1, 0x02,                         //     FEATURE (Data,Var,Abs)
	0x95, 0x06,                         //     REPORT_COUNT (6)             
	0xb1, 0x03,                         //     FEATURE (Cnst,Var,Abs)
	0xc0,                               //   END_COLLECTION
	0xc0,                               // END_COLLECTION
	//MOUSE TLC
	0x05, 0x01,                         // USAGE_PAGE (Generic Desktop)     
	0x09, 0x02,                         // USAGE (Mouse)                    
	0xa1, 0x01,                         // COLLECTION (Application)        
	0x85, REPORTID_MOUSE,               //   REPORT_ID (Mouse)              
	0x09, 0x01,                         //   USAGE (Pointer)                
	0xa1, 0x00,                         //   COLLECTION (Physical)          
	0x05, 0x09,                         //     USAGE_PAGE (Button)          
	0x19, 0x01,                         //     USAGE_MINIMUM (Button 1)     
	0x29, 0x02,                         //     USAGE_MAXIMUM (Button 2)     
	0x25, 0x01,                         //     LOGICAL_MAXIMUM (1)          
	0x75, 0x01,                         //     REPORT_SIZE (1)              
	0x95, 0x02,                         //     REPORT_COUNT (2)             
	0x81, 0x02,                         //     INPUT (Data,Var,Abs)         
	0x95, 0x06,                         //     REPORT_COUNT (6)             
	0x81, 0x03,                         //     INPUT (Cnst,Var,Abs)         
	0x05, 0x01,                         //     USAGE_PAGE (Generic Desktop) 
	0x09, 0x30,                         //     USAGE (X)                    
	0x09, 0x31,                         //     USAGE (Y)                    
	0x75, 0x10,                         //     REPORT_SIZE (16)             
	0x95, 0x02,                         //     REPORT_COUNT (2)             
	0x25, 0x0a,                          //    LOGICAL_MAXIMUM (10)      
	0x81, 0x06,                         //     INPUT (Data,Var,Rel)         
	0xc0,                               //   END_COLLECTION                 
	0xc0,                                //END_COLLECTION

};